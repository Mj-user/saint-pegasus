import json
from datetime import datetime
from rich.console import Console
from rich.table import Table
from rich.markdown import Markdown
import os

class ReportGenerator:
    def __init__(self, output_dir="output"):
        self.output_dir = output_dir
        self.console = Console()

    def generate_report(self, data, report_type):
        """Generate laporan dalam berbagai format"""
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")

        # Generate JSON
        json_file = f"{self.output_dir}/{report_type}_{timestamp}.json"
        self.save_json(data, json_file)

        # Generate Text Report
        txt_file = f"{self.output_dir}/{report_type}_{timestamp}.txt"
        self.save_text_report(data, txt_file)

        # Generate HTML Report
        html_file = f"{self.output_dir}/{report_type}_{timestamp}.html"
        self.save_html_report(data, html_file)

        return {
            "json": json_file,
            "txt": txt_file,
            "html": html_file
        }

    def save_json(self, data, filename):
        """Simpan data sebagai JSON"""
        with open(filename, 'w') as f:
            json.dump(data, f, indent=4)

    def save_text_report(self, data, filename):
        """Generate laporan text"""
        with open(filename, 'w') as f:
            f.write(f"Pegasus-Lacak-Ultimate Report\n")
            f.write(f"Generated: {datetime.now().isoformat()}\n")
            f.write("="*50 + "\n\n")

            self._write_dict_to_text(data, f)

    def save_html_report(self, data, filename):
        """Generate laporan HTML"""
        html = f"""
        <html>
        <head>
            <title>Pegasus-Lacak-Ultimate Report</title>
            <style>
                body {{ font-family: Arial, sans-serif; margin: 20px; }}
                .header {{ background: #f0f0f0; padding: 10px; }}
                .content {{ margin-top: 20px; }}
                .footer {{ margin-top: 20px; font-size: 0.8em; }}
            </style>
        </head>
        <body>
            <div class="header">
                <h1>Pegasus-Lacak-Ultimate Report</h1>
                <p>Generated: {datetime.now().isoformat()}</p>
            </div>
            <div class="content">
                {self._dict_to_html(data)}
            </div>
            <div class="footer">
                <p>Generated by Pegasus-Lacak-Ultimate</p>
            </div>
        </body>
        </html>
        """

        with open(filename, 'w') as f:
            f.write(html)

    def _write_dict_to_text(self, data, file, indent=0):
        """Helper untuk menulis dictionary ke text"""
        for key, value in data.items():
            if isinstance(value, dict):
                file.write("    " * indent + f"{key}:\n")
                self._write_dict_to_text(value, file, indent + 1)
            else:
                file.write("    " * indent + f"{key}: {value}\n")

    def _dict_to_html(self, data):
        """Helper untuk convert dictionary ke HTML"""
        html = "<ul>"
        for key, value in data.items():
            if isinstance(value, dict):
                html += f"<li><strong>{key}:</strong>{self._dict_to_html(value)}</li>"
            else:
                html += f"<li><strong>{key}:</strong> {value}</li>"
        html += "</ul>"
        return html 
